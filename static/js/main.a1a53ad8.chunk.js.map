{"version":3,"sources":["components/Card/Card.jsx","components/CardList/CardList.jsx","components/Title/Title.jsx","components/SearchBox/SearchBox.jsx","components/Scroll/Scroll.jsx","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","username","className","alt","src","CardList","robots","map","item","Title","SearchBox","searchfield","onSearchChange","type","placeholder","onChange","Scroll","children","style","overflowY","height","App","useState","api","first_mount","setFirstMount","data","setData","setRobots","useEffect","fetch","then","res","json","err","console","error","message","length","e","filter","robot","toLowerCase","includes","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAeeA,EAbJ,SAAC,GAA8B,IAAD,EAA5BC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,KAAeC,GAAS,EAAlBC,SAAkB,EAATD,OAE5B,OACI,yBAAKE,UAAU,MAAf,0BAA8B,oDAA9B,0BACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BN,EAA1B,cACrB,gCACI,6BAAMC,IACN,4BAAKC,SAJb,KCsBOK,EAxBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAGf,OACI,8BAEYA,EAAOC,KAAI,SAACC,GAER,OACA,cAAC,EAAD,CACAV,GAAIU,EAAKV,GACTC,KAAMS,EAAKT,KACXE,SAAUO,EAAKP,SACfD,MAAOQ,EAAKR,OACLQ,EAAKV,UCHrBW,EAZD,WAGV,OAEI,8BACI,gDCUGC,EAhBG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,eAI5B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACCW,KAAK,SACLX,UAAU,gCACVY,YAAY,gBACZC,SAAUH,OCCRI,EAVA,SAAC,GAAc,IAAbC,EAAY,EAAZA,SAEb,OACI,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,QAAvC,SACMH,KCiECI,EA9DL,WAAM,IAAD,EAEOC,mBAAS,8CAFhB,mBAEPC,EAFO,aAGuBD,oBAAS,IAHhC,mBAGNE,EAHM,KAGMC,EAHN,OAIUH,mBAAS,IAJnB,mBAINI,EAJM,KAIDC,EAJC,OAKcL,mBAAS,IALvB,mBAKNhB,EALM,KAKCsB,EALD,OAMyBN,mBAAS,IANlC,mBAMNX,EANM,UAwCb,OAvBAkB,qBAAU,WACR,GAAGL,EAAY,CAEb,IACEM,MAAMP,GACNQ,MAAK,SAACC,GACJ,OAAOA,EAAIC,UAEbF,MAAK,SAACL,GACJC,EAAQD,GACRE,EAAUF,MAEZ,MAAMQ,GACNC,QAAQC,MAAMF,EAAIG,SAIpBZ,GAAc,MAGhB,CAACD,IAGgB,IAAhBE,EAAKY,OAEJ,8BACE,oBAAIpC,UAAU,KAAd,uBAMJ,sBAAKA,UAAU,MAAf,UAEE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWS,YAAaA,EAAaC,eA5ClB,SAAC2B,GAEpBX,EAAUF,EAAKc,QAAO,SAACC,GACrB,OAAQA,EAAM1C,KAAK2C,cAAcC,SAASJ,EAAEK,OAAOC,MAAMH,sBA0C3D,cAAC,EAAD,UACE,cAAC,EAAD,CAAUpC,OAAQA,UCpDXwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a1a53ad8.chunk.js","sourcesContent":["import { useState } from 'react';\n \nconst Card=({id, name, username,email})=>{\n\n    return (\n        <div className=\"tc\" className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt=\"robots\" src={`https://robohash.org/${id}?100x100`}/>\n            <div>\n                <h2>{ name }</h2>\n                <p>{ email }</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;\n\n","import Card from '../Card/Card.jsx'\n\n\nconst CardList = ({robots})=>{\n\n\n    return (\n        <div>\n            {   \n                    robots.map((item)=>{\n\n                        return( \n                        <Card \n                        id={item.id} \n                        name={item.name} \n                        username={item.username} \n                        email={item.email} \n                        key = {item.id}\n                        />\n                        )\n                    })\n        }\n        </div>\n    )\n\n}\n\nexport default CardList;\n","\n\nconst Title = ()=>{\n\n\n    return (\n\n        <div>\n            <h1>RoboFriends</h1>\n        </div>\n    )\n\n}\n\nexport default Title;","\n\nconst SearchBox = ({searchfield,onSearchChange})=>{\n\n\n\n    return(\n        <div className='pa2'>\n            <input\n             type=\"search\"\n             className='pa3 ba b--green bg-light-blue' \n             placeholder='Search robots'  \n             onChange={onSearchChange}            \n             />\n        </div>\n    )\n}\n\nexport default SearchBox;","import { Children } from \"react\";\n\n\nconst Scroll = ({children})=>{\n    \n    return(\n        <div style={{overflowY:'scroll',height:'70vh'}}>\n            { children }\n        </div>\n        \n    )\n}\n\nexport default Scroll;","import './App.css';\nimport 'tachyons';\nimport CardList from '../components/CardList/CardList.jsx';\nimport {useState, useEffect}  from 'react';\nimport Title from '../components/Title/Title.jsx';\nimport SearchBox from '../components/SearchBox/SearchBox.jsx';\nimport Scroll from '../components/Scroll/Scroll.jsx'\n\n\n\nconst App=()=> {\n\n  const[api,setApi] = useState('https://jsonplaceholder.typicode.com/users')\n  const [first_mount,setFirstMount] = useState(true)\n  const [data,setData] = useState([])\n  const [robots,setRobots] = useState([])\n  const [searchfield, setSearchfield] = useState('')\n\n  const onSearchChange = (e)=>{\n      \n      setRobots(data.filter((robot)=>{\n        return (robot.name.toLowerCase().includes(e.target.value.toLowerCase()))\n      }))\n      \n  }\n\n\n  useEffect(()=>{\n    if(first_mount){\n\n      try{\n        fetch(api).\n        then((res)=>{\n          return res.json()\n        }).\n        then((data)=>{\n          setData(data)\n          setRobots(data)\n        })\n      } catch(err) {\n        console.error(err.message)\n      }\n\n\n      setFirstMount(false)\n\n    }\n  },[first_mount])\n\n\n  if(data.length === 0){\n    return (\n      <div>\n        <h1 className='tc'>Loading</h1>\n      </div>\n    )\n  }else{\n\n  return (\n    <div className=\"App\">\n      \n      <Title/>\n      <SearchBox searchfield={searchfield} onSearchChange={onSearchChange}/>\n      <Scroll>\n        <CardList robots={robots}/>\n      </Scroll>\n      \n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}